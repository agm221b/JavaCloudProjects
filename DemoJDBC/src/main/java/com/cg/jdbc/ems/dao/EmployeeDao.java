/**
 * 
 */
package com.cg.jdbc.ems.dao;

import java.math.BigInteger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

import com.cg.jdbc.ems.exception.EmployeeException;
import com.cg.jdbc.ems.exception.MyException;
import com.cg.jdbc.ems.model.Employee;
import com.cg.jdbc.ems.util.DBUtil;
import com.mysql.jdbc.Statement;

/**
 * @author User
 *
 */
public class EmployeeDao implements IEmployeeDao {
	
	//prep -work 1- Connection
	
	private static Connection connection;
	private PreparedStatement ps;
	private ResultSet rs;
	private static Logger myLogger;
	
	static{
    	
  	  Properties props = System.getProperties();
  	  String userDir= props.getProperty("user.dir")+"/src/main/resources/";
  	  System.out.println("Current working directory is " +userDir);
  	  PropertyConfigurator.configure(userDir+"log4j.properties");
  	  myLogger=Logger.getLogger("EmployeeDao.class");
		}
	
	static {
		try {
			connection = DBUtil.getConnection();
			myLogger.info("connection obtained");
			
		}catch (MyException e) {
			// TODO: handle exception
			myLogger.error("connection not obtained at EmployeeDao: "+e);
		}
	}

	@Override
	public Employee addEmployee(Employee employee) throws EmployeeException {
		String sql = "insert into my_emp(emp_name,emp_sal) values (?,?)";
		
		//step 1 : obtain ps;
		
		try {
			ps=connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
			//step 2: set the ps placeholder
			ps.setString(1, employee.getEmpName());
			ps.setBigDecimal(2, employee.getEmpSal());
			
			
			//step 3: executeQuery(for DML, we have executeUpdate Method)
			int noOfRec = ps.executeUpdate();
			//getting the autogenerated value
			BigInteger generatedId = BigInteger.valueOf(0L);
			rs = ps.getGeneratedKeys();
			
			if(rs.next()) {
				generatedId = BigInteger.valueOf(rs.getLong(1));
				System.out.println("Auto generated Id "+generatedId);
			}
			//setting the auto-generated Id to current emp obj
			employee.setEmpId(generatedId);
			
		} catch (SQLException e) {
			
			//System.out.println();
			myLogger.error("Error at addEmployee Dao method: "+e);
			throw new EmployeeException("Error at addEmployee Dao method: "+e);
		}finally {
			if(ps!=null) {
				try {
					ps.close();
				}catch (SQLException e) {
					// TODO: handle exception
					System.out.println("Error at addEmployee Dao method: "+e);
				}
			}
		}
		
		return employee;
	}

	@Override
	public List<Employee> listAllEmployees() throws EmployeeException {
		// TODO Auto-generated method stub
		String sql = "select * from my_emp";
		List<Employee> emplList = new ArrayList<Employee>();
		
		try {
			ps = connection.prepareStatement(sql);
			//for select queries we have executeQiery method which returns ResultSet
			rs =  ps.executeQuery();
			while(rs.next()) {
				//create emp obj
				Employee emp = new Employee();
				//get the value from rs and emp obj
				emp.setEmpId(BigInteger.valueOf(rs.getLong("emp_id")));
				emp.setEmpName(rs.getString("emp_name"));
				emp.setEmpSal(rs.getBigDecimal("emp_sal"));
				
				//add the emp obj to empList
				emplList.add(emp);
			}
		}catch (SQLException e) {
			System.out.println("Error at addEmployee Dao method: "+e);
		}finally {
			if(ps!=null) {
				try {
					ps.close();
				}catch (SQLException e) {
					// TODO: handle exception
					System.out.println("Error at addEmployee Dao method: "+e);
				}
			}
		}
		
		return emplList;
	}

}
